name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - dev
          - dev-history_closed_by_assignee
      docker_tag:
        description: 'Docker tag (leave empty for latest)'
        required: false
        type: string
      push_to_registry:
        description: 'Push to registry'
        required: true
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/hts-pylon-db

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: ${{ github.event.inputs.push_to_registry == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.docker_tag || 'latest' }}
            type=raw,value=${{ github.event.inputs.branch }}-${{ github.run_number }}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event.inputs.push_to_registry == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image details
        if: ${{ github.event.inputs.push_to_registry == 'true' }}
        run: |
          echo "üöÄ Docker image built and pushed successfully!"
          echo "üì¶ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "üè∑Ô∏è  Tags:"
          echo "${{ steps.meta.outputs.tags }}" | sed 's/^/  - /'
          echo ""
          echo "üí° To pull the image:"
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.docker_tag || 'latest' }}"